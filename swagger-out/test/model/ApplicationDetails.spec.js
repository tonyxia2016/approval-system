/**
 * 审批流程 API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.5.0
 * Contact: rlee@163.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.ApplicationDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationDetails', function() {
    it('should create an instance of ApplicationDetails', function() {
      // uncomment below and update the code to test ApplicationDetails
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be.a(Api.ApplicationDetails);
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property applicant (base name: "applicant")', function() {
      // uncomment below and update the code to test the property applicant
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property reportNo (base name: "reportNo")', function() {
      // uncomment below and update the code to test the property reportNo
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property plateNo (base name: "plateNo")', function() {
      // uncomment below and update the code to test the property plateNo
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property vehicleModel (base name: "vehicleModel")', function() {
      // uncomment below and update the code to test the property vehicleModel
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property repairPlant (base name: "repairPlant")', function() {
      // uncomment below and update the code to test the property repairPlant
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property actualCost (base name: "actualCost")', function() {
      // uncomment below and update the code to test the property actualCost
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property evaluationCost (base name: "evaluationCost")', function() {
      // uncomment below and update the code to test the property evaluationCost
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property purchasePrice (base name: "purchasePrice")', function() {
      // uncomment below and update the code to test the property purchasePrice
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property agreementAmount (base name: "agreementAmount")', function() {
      // uncomment below and update the code to test the property agreementAmount
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property investigator (base name: "investigator")', function() {
      // uncomment below and update the code to test the property investigator
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property investigateLocation (base name: "investigateLocation")', function() {
      // uncomment below and update the code to test the property investigateLocation
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property investigateDate (base name: "investigateDate")', function() {
      // uncomment below and update the code to test the property investigateDate
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property insurer (base name: "insurer")', function() {
      // uncomment below and update the code to test the property insurer
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property insured (base name: "insured")', function() {
      // uncomment below and update the code to test the property insured
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property finalAmount (base name: "finalAmount")', function() {
      // uncomment below and update the code to test the property finalAmount
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property deductible (base name: "deductible")', function() {
      // uncomment below and update the code to test the property deductible
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property occurredDate (base name: "occurredDate")', function() {
      // uncomment below and update the code to test the property occurredDate
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property quoteDate (base name: "quoteDate")', function() {
      // uncomment below and update the code to test the property quoteDate
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property quoteAmount (base name: "quoteAmount")', function() {
      // uncomment below and update the code to test the property quoteAmount
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

    it('should have the property targetAmount (base name: "targetAmount")', function() {
      // uncomment below and update the code to test the property targetAmount
      //var instane = new Api.ApplicationDetails();
      //expect(instance).to.be();
    });

  });

}));
